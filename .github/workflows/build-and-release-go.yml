name: Build and release Go code

on:
  workflow_call:
    inputs:
      app-name:
        required: false
        type: string
        default: 'app'
      go-version:
        required: false
        type: string
        default: '1.23'
      build-file:
        required: false
        type: string
        default: 'main.go'

permissions:
  contents: write

jobs:
  version:
    uses: LarsNieuwenhuizen/workflows/.github/workflows/define-version.yml@feat/go-build-release-workflow

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os-arch-combinations:
          - arch: amd64
            os: linux
          - arch: arm64
            os: linux
          - arch: arm
            os: linux
          - arch: amd64
            os: darwin
          - arch: arm64
            os: darwin
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ inputs.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
        id: go

      - name: Build
        shell: bash
        run: |
          GOOS=${{ matrix.os-arch-combinations.os }} GOARCH=${{ matrix.os-arch-combinations.arch }} go build --ldflags '-extldflags "-static"' -o bin/${{ inputs.app-name }} ${{ inputs.build-file }}
          cd bin
          tar -czvf "${{ inputs.app-name }}-${{ matrix.os-arch-combinations.os }}-${{ matrix.os-arch-combinations.arch }}.tar.gz" ${{ inputs.app-name }}
          rm ${{ inputs.app-name }}

      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ matrix.os-arch-combinations.os }}-${{ matrix.os-arch-combinations.arch }}
          path: bin/*.tar.gz
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - version
      - build

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        path: bin
        merge-multiple: true

    - name: Check the created tarballs
      shell: bash
      run: |
        ls -al bin

    - name: Create a release commit
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "no-reply@email.com"
        git commit -m "release: ${{ needs.version.outputs.release-version }}" --allow-empty
        git push origin main --tags
        gh release create ${{ needs.version.outputs.release-version }} ./bin/*.tar.gz --generate-notes
